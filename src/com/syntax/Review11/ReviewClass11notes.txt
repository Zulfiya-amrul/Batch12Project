Method Overriding in java;
Method overriding happens when we have same method names with same signature (Method name and its parameter are
called signature of a method) in a parent class and in a child class

Benefits:
1) flexibility, with the help of method overriding child classes can provide its own implementation
of the methods that are present in the parent class
Polymorphism- same method can behave differently depending upon the object we call it

Rules:
1) There must me Parent- Child relationship between the two classes
2) The method that we are trying override must be present inside the child class with same name and parameters
3)  if something doesn't participate in inheritance we can't override it for example private methods and fields and constructors
4) if a method is declared final inside the parent class we can't override that method inside the child class
5) we can't override the static methods but, we can redeclare them. for example the main method.
------we can overload the main method but can't override it, we can also re-declare the main method----
6) we can't change the access modifier to be more restrictive
7) return type should be same

Method Overloading                vs                  Overriding
Method signature should be different                                     method signature should be same
return type can be different                                      return type should be same
we don't care about access modifiers                                      access modifiers can't be more restrictive
we dont care about  non access modifiers (final static abstract)         we do care about the non acess modifiers
we can overload constructors                                            we cant override constructors
we achieve compile time polymorphism or early binding or static           run time polymorphims or dynampic polymorphism or late binding

Polymorphism :
polymorphism happens when an object behaves differently
for example a method can behave different when we pass different parameters of when we call the method using
different objects

Final KeyWord in java
 final keyword is non acess modifere that can help restrict some features of OOps
 when we use it in the class name no other calss can inherit from that class
 when we use it in method we cant override the method
 when we use it in fields we cant change the fields values
when we use it with fields we cant change theri values in parent or child class but we can have same name

 rules:
1) we cant use abstract and final together
2) static and final can be used together
3) improves the maintability of code

Abstraction
is a process through which we hide the implementation details and show only the functionality to the user
a class declared with abstract keyword is called abstract class
rules
1) as soon as we have a method abstract taht calss must also be abstract
2) abstract methods dont have boidies inside the classes in which they are defied
3) a method cant be staticand abstract at the same time
4) fields cant be abstact
5) methods cant be private and abstract
6) abstact keywrod not allowed with constrctors
7) we can have conctrete and abstract methods in an abstract class
